{"version":3,"sources":["assets\\scripts\\movement.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    @property\r\n    speed: number = 200; // Tốc độ di chuyển của nhân vật, có thể điều chỉnh\r\n\r\n    private direction: cc.Vec2 = cc.v2(0, 0); // Lưu trữ hướng di chuyển hiện tại của nhân vật\r\n    private targetPosition: cc.Vec2 = null; // Lưu trữ vị trí chuột để xoay\r\n\r\n    onLoad() {\r\n        // Xử lý sự kiện bàn phím\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n        \r\n        // Lắng nghe sự kiện chuột để xoay nhân vật\r\n        this.node.parent.on('mousemove', this.positionXY, this);\r\n    }\r\n\r\n    onKeyDown(event) {\r\n        // Xử lý khi nhấn phím\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.w: // Phím W\r\n                this.direction.y = 1; // Di chuyển lên\r\n                break;\r\n            case cc.macro.KEY.s: // Phím S\r\n                this.direction.y = -1; // Di chuyển xuống\r\n                break;\r\n            case cc.macro.KEY.a: // Phím A\r\n                this.direction.x = -1; // Di chuyển sang trái\r\n                break;\r\n            case cc.macro.KEY.d: // Phím D\r\n                this.direction.x = 1; // Di chuyển sang phải\r\n                break;\r\n        }\r\n    }\r\n\r\n    onKeyUp(event) {\r\n        // Xử lý khi thả phím\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.w: // Phím W\r\n                this.direction.y = 0; // Dừng di chuyển theo trục Y\r\n                break;\r\n            case cc.macro.KEY.s: // Phím S\r\n                this.direction.y = 0; // Dừng di chuyển theo trục Y\r\n                break;\r\n            case cc.macro.KEY.a: // Phím A\r\n                this.direction.x = 0; // Dừng di chuyển theo trục Y\r\n                break;\r\n            case cc.macro.KEY.d: // Phím D\r\n                this.direction.x = 0; // Dừng di chuyển theo trục X\r\n                break;\r\n        }\r\n    }\r\n\r\n    positionXY(event) {\r\n        // Tính toán góc xoay của nhân vật theo chuột\r\n        var playerPosition = cc.v2(this.node.position.x, this.node.position.y);\r\n        var mousePosition = event.getLocation();\r\n        \r\n        // Chuyển đổi vị trí chuột sang không gian của node\r\n        mousePosition = this.node.parent.convertToNodeSpaceAR(mousePosition);\r\n        \r\n        // Tính vector hướng từ nhân vật đến chuột\r\n        var directionVector = mousePosition.sub(playerPosition);\r\n        \r\n        // Nếu vector hướng không phải là vector không\r\n        if (directionVector.mag() > 0) {\r\n            var angle = directionVector.signAngle(cc.v2(1, 0)); // Tính góc theo trục X\r\n            \r\n            // Chuyển góc sang độ\r\n            var angleD = cc.misc.radiansToDegrees(angle);\r\n            angleD = (angleD * -1) - 90; // Điều chỉnh góc cho phù hợp\r\n            \r\n            // Cập nhật góc của nhân vật\r\n            this.node.angle = angleD;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        // Di chuyển nhân vật theo các phím WASD\r\n        if (this.direction.x !== 0 || this.direction.y !== 0) {\r\n            // Di chuyển nhân vật theo hướng hiện tại\r\n            var moveDistance = this.direction.normalize().mul(this.speed * dt);\r\n            var newPosition = this.node.position.add(moveDistance);\r\n            this.node.setPosition(newPosition);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        // Hủy bỏ sự kiện khi đối tượng bị hủy\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n        this.node.parent.off('mousemove', this.positionXY, this);\r\n    }\r\n}\r\n"]}