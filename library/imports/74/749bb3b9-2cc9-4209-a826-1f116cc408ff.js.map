{"version":3,"sources":["assets\\scripts\\bad.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAsC,4BAAY;IAAlD;QAAA,qEAkDC;QA/CG,WAAK,GAAW,GAAG,CAAC,CAAC,kDAAkD;;QA8CvE,iBAAiB;IACrB,CAAC;IA7CG,wBAAwB;IAExB,mCAAgB,GAAhB,UAAiB,KAAK,EAAE,IAAI;QACxB,6EAA6E;QAC7E,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;SACpD;QACD,8EAA8E;QAC9E,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE;YAChB,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACjC;IACL,CAAC;IAED,+BAAY,GAAZ;QACI,gEAAgE;QAChE,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QAC5E,IAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE/C,0DAA0D;QAC1D,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,yBAAM,GAAN;QACI,yCAAyC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAE3D,mDAAmD;QACnD,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACvC,IAAM,gBAAgB,GAAG,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAEtD,+BAA+B;QAC/B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEtC,6BAA6B;QAC7B,IAAI,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;QAChD,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAEvB,uBAAuB;QACvB,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAED,wBAAK,GAAL,cAAS,CAAC;IA/CO,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAkD5B;IAAD,eAAC;CAlDD,AAkDC,CAlDqC,EAAE,CAAC,SAAS,GAkDjD;kBAlDoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n    action: cc.ActionInterval;\r\n    soldier: cc.Node;  // Biến để lưu trữ nhân vật chính (soldier)\r\n    speed: number = 100; // Tốc độ di chuyển của con vật, có thể điều chỉnh\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onCollisionEnter(other, self) {\r\n        // Kiểm tra va chạm với đối tượng có tag 2 (có thể là mục tiêu hoặc vật phẩm)\r\n        if (other.tag == 2) {\r\n            this.node.destroy();\r\n            this.node.parent.getComponent('Game').addScore();\r\n        }\r\n        // Kiểm tra va chạm với đối tượng có tag 1 (có thể là va chạm với các đối thủ)\r\n        if (other.tag == 1) {\r\n            cc.director.loadScene(\"Game\");\r\n        }\r\n    }\r\n\r\n    moveToPlayer() {\r\n        // Tính toán vector hướng di chuyển tới nhân vật chính (soldier)\r\n        const direction = this.soldier.position.sub(this.node.position).normalize();\r\n        const moveDistance = direction.mul(this.speed);\r\n\r\n        // Tạo hành động di chuyển liên tục về phía nhân vật chính\r\n        return cc.moveBy(1, moveDistance.x, moveDistance.y);\r\n    }\r\n\r\n    onLoad() {\r\n        // Lấy đối tượng nhân vật chính (soldier)\r\n        this.soldier = this.node.parent.getChildByName('soldier1');\r\n\r\n        // Khởi tạo hành động di chuyển và lặp lại liên tục\r\n        const moveAction = this.moveToPlayer();\r\n        const repeatMoveAction = cc.repeatForever(moveAction);\r\n\r\n        // Thực thi hành động di chuyển\r\n        this.node.runAction(repeatMoveAction);\r\n\r\n        // Kích hoạt hệ thống va chạm\r\n        var manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n        \r\n        // Tiền tải cảnh \"Game\"\r\n        cc.director.preloadScene(\"Game\");\r\n    }\r\n\r\n    start() {}\r\n\r\n    // update (dt) {}\r\n}\r\n"]}